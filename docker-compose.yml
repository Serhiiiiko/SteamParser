version: '3'

services:
    rabbitmq:
        image: rabbitmq:3-management
        container_name: rabbitmq
        restart: unless-stopped
        hostname: "node-dev"
        environment:
            RABBITMQ_ERLANG_COOKIE: ${RABBITMQ_ERLANG_COOKIE}
            RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
            RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
        ports:
            - "${RABBITMQ_AMQP_PORT}:5672"
            - "${RABBITMQ_WEBUI_PORT}:15672"
        networks:
            - monitoring

    redis:
        image: redis:latest
        container_name: redis_coord
        restart: unless-stopped
        command: redis-server --requirepass ${REDIS_PASSWORD}
        ports:
            - "${REDIS_PORT}:6379"
        networks:
            - monitoring

    bot:
        build:
            dockerfile: Dockerfile
            context: .
        restart: unless-stopped
        depends_on:
            - rabbitmq
            - redis
        env_file: bot.dev.env
        environment:
            - WORKER_REDIS_HOST=redis
            - WORKER_REDIS_PORT=6379
            - CACHE_REDIS_HOST=redis
            - CACHE_REDIS_PORT=6379
            - TELEGRAM_REDIS_HOST=redis
            - TELEGRAM_REDIS_PORT=6379
        command: poetry run python3 bot.py
        networks:
            - monitoring
        dns:
            - 8.8.8.8
            - 8.8.4.4

    csmoney_parser:
        build:
            dockerfile: Dockerfile
            context: .
        restart: unless-stopped
        depends_on:
            - rabbitmq
            - redis
        env_file: csmoney_parser.dev.env
        environment:
            - PYTHONHTTPSVERIFY=0
            - REDIS_HOST=redis
            - REDIS_PORT=6379
            - RABBITMQ_HOST=rabbitmq
            - RABBITMQ_PORT=5672
        command: poetry run python3 csmoney_parser.py
        networks:
            - monitoring
        dns:
            - 8.8.8.8
            - 8.8.4.4
        extra_hosts:
            - "inventories.cs.money:104.18.22.114"
            - "cs.money:104.18.22.114"
            - "wiki.cs.money:104.18.22.114"

    steam_parser:
        build:
            dockerfile: Dockerfile
            context: .
        restart: unless-stopped
        depends_on:
            - rabbitmq
            - redis
        env_file: steam_parser.dev.env
        environment:
            - REDIS_HOST=redis
            - REDIS_PORT=6379
            - RABBITMQ_HOST=rabbitmq
            - RABBITMQ_PORT=5672
        command: poetry run python3 steam_parser.py
        networks:
            - monitoring
        dns:
            - 8.8.8.8
            - 8.8.4.4
        extra_hosts:
            - "steamcommunity.com:23.50.80.221"

    worker:
        build:
            dockerfile: Dockerfile
            context: .
        restart: unless-stopped
        depends_on:
            - rabbitmq
            - redis
        env_file: worker.dev.env
        environment:
            - REDIS_HOST=redis
            - REDIS_PORT=6379
            - RABBITMQ_HOST=rabbitmq
            - RABBITMQ_PORT=5672
        command: poetry run python3 worker.py
        networks:
            - monitoring
        dns:
            - 8.8.8.8
            - 8.8.4.4

    create_csmoney_tasks:
        build:
            dockerfile: Dockerfile
            context: .
        volumes:
            - ./utils:/root/fw3/utils
        env_file: utils/create_csmoney_tasks.env
        environment:
            - REDIS_HOST=redis
            - REDIS_PORT=6379
        command: poetry run python3 utils/create_csmoney_tasks.py
        depends_on:
            - redis
        networks:
            - monitoring

    upload_proxies:
        build:
            dockerfile: Dockerfile
            context: .
        volumes:
            - ./utils:/root/fw3/utils
            - ./utils_mount:/root/fw3/utils_mount
        env_file: utils/upload_proxies.env
        environment:
            - REDIS_HOST=redis
            - REDIS_PORT=6379
        command: poetry run python3 utils/upload_proxies.py
        depends_on:
            - redis
        networks:
            - monitoring

networks:
    monitoring:
        driver: bridge