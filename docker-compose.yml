# docker-compose.yml
version: '3'

services:
    rabbitmq:
        image: rabbitmq:3-management
        container_name: rabbitmq
        restart: unless-stopped
        hostname: "node-dev"
        environment:
            RABBITMQ_ERLANG_COOKIE: ${RABBITMQ_ERLANG_COOKIE}
            RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
            RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
        ports:
            - "${RABBITMQ_AMQP_PORT}:5672"
            - "${RABBITMQ_WEBUI_PORT}:15672"
        healthcheck:
            test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
            interval: 30s
            timeout: 10s
            retries: 5
        networks:
            - app-network

    redis:
        image: redis:latest
        container_name: redis_coord
        restart: unless-stopped
        command: redis-server --requirepass ${REDIS_PASSWORD}
        ports:
            - "${REDIS_PORT}:6379"
        healthcheck:
            test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
            interval: 30s
            timeout: 5s
            retries: 5
        networks:
            - app-network

    upload_proxies:
        build:
            dockerfile: Dockerfile
            context: .
        networks:
            - app-network
        volumes:
            - ./utils:/root/fw3/utils
            - ./utils_mount:/root/fw3/utils_mount
        env_file: utils/upload_proxies.env
        environment:
            REDIS_HOST: redis
        command: poetry run python3 utils/upload_proxies.py
        depends_on:
            - redis

    create_csmoney_tasks:
        build:
            dockerfile: Dockerfile
            context: .
        networks:
            - app-network
        volumes:
            - ./utils:/root/fw3/utils
        env_file: utils/create_csmoney_tasks.env
        environment:
            REDIS_HOST: redis
        command: poetry run python3 utils/create_csmoney_tasks.py
        depends_on:
            - redis
            - upload_proxies

    bot:
        build:
            dockerfile: Dockerfile
            context: .
        restart: unless-stopped
        networks:
            - app-network
        depends_on:
            - rabbitmq
            - redis
        env_file: bot.dev.env
        environment:
            WORKER_REDIS_HOST: redis
            CACHE_REDIS_HOST: redis
            TELEGRAM_REDIS_HOST: redis
        command: bash -c "sleep 10 && poetry run python3 bot.py"

    csmoney_parser:
        build:
            dockerfile: Dockerfile
            context: .
        restart: unless-stopped
        networks:
            - app-network
        depends_on:
            - rabbitmq
            - redis
            - upload_proxies
            - create_csmoney_tasks
        env_file: csmoney_parser.dev.env
        environment:
            REDIS_HOST: redis
            RABBITMQ_HOST: rabbitmq
            USE_PROXY: "false"  # Set to true when proxies are working
        command: bash -c "sleep 15 && poetry run python3 csmoney_parser.py"

    steam_parser:
        build:
            dockerfile: Dockerfile
            context: .
        restart: unless-stopped
        networks:
            - app-network
        depends_on:
            - rabbitmq
            - redis
            - upload_proxies
        env_file: steam_parser.dev.env
        environment:
            REDIS_HOST: redis
            RABBITMQ_HOST: rabbitmq
        command: bash -c "sleep 15 && poetry run python3 steam_parser.py"

    worker:
        build:
            dockerfile: Dockerfile
            context: .
        restart: unless-stopped
        networks:
            - app-network
        depends_on:
            - rabbitmq
            - redis
        env_file: worker.dev.env
        environment:
            REDIS_HOST: redis
            RABBITMQ_HOST: rabbitmq
        command: bash -c "sleep 10 && poetry run python3 worker.py"

networks:
    app-network:
        driver: bridge